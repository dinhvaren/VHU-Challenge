<!-- Glitch Background -->
<div class="glitch">
  <div class="glitch__img"></div>
  <div class="glitch__img"></div>
  <div class="glitch__img"></div>
  <div class="glitch__img"></div>
  <div class="glitch__img"></div>
</div>

<!-- Navbar -->
<div class="navbar-dark text-white" style="position: relative; z-index: 10;">
  <div class="container">
    {{> navbar-auth}}
  </div>
</div>

<!-- Content -->
<div class="jumbotron bg-transparent mb-0 pt-3 radius-0" style="position: relative; z-index: 10;">
  <div class="container">
    <!-- Title -->
    <div class="row">
      <div class="col-xl-8">
        <h1 class="display-1 bold color_white content__title mb-3">CHALLENGES</h1>
        <p class="text-grey hackerFont lead mb-4">
          Ch·ªçn challenge theo danh m·ª•c, ƒë·ªçc m√¥ t·∫£ v√† n·ªôp flag tr·ª±c ti·∫øp.
        </p>
      </div>
    </div>

    <!-- Filters -->
    <div class="row align-items-center mb-4">
      <div class="col-md-6">
        <div class="btn-group" role="group" aria-label="Categories">
          <button class="btn btn-outline-danger filter-btn active" data-cat="all">All</button>
          <button class="btn btn-outline-danger filter-btn" data-cat="Web">Web</button>
          <button class="btn btn-outline-danger filter-btn" data-cat="Crypto">Crypto</button>
          <button class="btn btn-outline-danger filter-btn" data-cat="Forensics">Forensics</button>
          <button class="btn btn-outline-danger filter-btn" data-cat="Pwn">Pwn</button>
          <button class="btn btn-outline-danger filter-btn" data-cat="Misc">Misc</button>
        </div>
      </div>
      <div class="col-md-6 mt-3 mt-md-0">
        <div class="input-group">
          <input
            id="searchInput"
            type="text"
            class="form-control bg-transparent text-light"
            placeholder="Search challenge..."
          />
          <div class="input-group-append">
            <span class="input-group-text bg-transparent text-light border-left-0">
              <i class="fas fa-search"></i>
            </span>
          </div>
        </div>
      </div>
    </div>

    <!-- Challenges Grid -->
    <div class="row" id="challengeGrid">
      <!-- Example Card -->
      <div
        class="col-md-4 mb-4 challenge-card"
        data-name="SQL Injection"
        data-cat="Web"
        data-points="100"
        data-diff="Easy"
        data-solved="false"
        data-flag="FLAG{sql_demo}"
        data-desc="T√¨m c√°ch bypass login qua l·ªó h·ªïng SQL Injection c·ªï ƒëi·ªÉn."
        data-attachments=""
      >
        <div class="card bg-transparent border border-light h-100">
          <div class="card-body d-flex flex-column">
            <h5 class="color_white mb-2">SQL Injection</h5>
            <div class="mb-2">
              <span class="badge badge-info">Web</span>
              <span class="badge badge-light">100 pts</span>
              <span class="badge badge-secondary">Easy</span>
            </div>
            <p class="text-grey flex-grow-1">Bypass x√°c th·ª±c b·∫±ng payload ph√π h·ª£p.</p>
            <div class="d-flex justify-content-between align-items-center">
              <span class="badge badge-dark status-badge">Unsolved</span>
              <button class="btn btn-outline-danger btn-sm openChallenge">Details</button>
            </div>
          </div>
        </div>
      </div>

      <div
        class="col-md-4 mb-4 challenge-card"
        data-name="Hidden Message"
        data-cat="Crypto"
        data-points="150"
        data-diff="Medium"
        data-solved="false"
        data-flag="vhuCTF{crypto_demo}"
        data-desc="Th√¥ng ƒëi·ªáp ƒë∆∞·ª£c m√£ h√≥a ‚Äî h√£y kh√¥i ph·ª•c plaintext ƒë·ªÉ l·∫•y flag."
        data-attachments=""
      >
        <div class="card bg-transparent border border-light h-100">
          <div class="card-body d-flex flex-column">
            <h5 class="color_white mb-2">Hidden Message</h5>
            <div class="mb-2">
              <span class="badge badge-info">Crypto</span>
              <span class="badge badge-light">150 pts</span>
              <span class="badge badge-secondary">Medium</span>
            </div>
            <p class="text-grey flex-grow-1">Gi·∫£i m√£ ciphertext b·∫±ng k·ªπ thu·∫≠t ph√π h·ª£p.</p>
            <div class="d-flex justify-content-between align-items-center">
              <span class="badge badge-dark status-badge">Unsolved</span>
              <button class="btn btn-outline-danger btn-sm openChallenge">Details</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Challenge Modal -->
<div class="modal fade" id="challengeModal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
    <div class="modal-content bg-dark text-light border border-danger">
      <div class="modal-header border-danger">
        <h5 class="modal-title color_white" id="modalTitle">Challenge</h5>
        <button type="button" class="close text-light" data-dismiss="modal"><span>&times;</span></button>
      </div>
      <div class="modal-body hackerFont">
        <div class="mb-2">
          <span class="badge badge-info" id="modalCategory">Category</span>
          <span class="badge badge-light" id="modalPoints">0 pts</span>
          <span class="badge badge-secondary" id="modalDiff">Diff</span>
          <span class="badge badge-dark" id="modalStatus">Unsolved</span>
        </div>
        <p id="modalDesc" class="text-grey mb-3"></p>

        <div id="modalAttachments" class="mb-3 d-none">
          <h6 class="color_white mb-2">Attachments</h6>
          <ul class="mb-0" id="attachmentsList"></ul>
        </div>

        <hr class="border-light" />
        <div class="form-group mb-1">
          <label for="flagInput">Submit Flag</label>
          <input
            type="text"
            id="flagInput"
            class="form-control bg-transparent text-light"
            placeholder="vhuCTF{...}"
          />
          <small class="form-text text-muted">
            Demo ph√≠a client. Khi tri·ªÉn khai th·ª±c t·∫ø, g·ª≠i flag l√™n server ƒë·ªÉ ch·∫•m.
          </small>
        </div>
        <input type="hidden" id="expectedFlag" />
      </div>
      <div class="modal-footer border-danger">
        <button class="btn btn-outline-light" data-dismiss="modal">Close</button>
        <button class="btn btn-outline-danger" id="submitFlag">Submit</button>
      </div>
    </div>
  </div>
</div>

<!-- Toast Notification -->
<div
  aria-live="polite"
  aria-atomic="true'
  style="position: fixed; top: 1rem; right: 1rem; z-index: 9999;"
>
  <div id="toastMsg" class="toast bg-dark text-light border border-danger" data-delay="3000">
    <div class="toast-header bg-danger text-white">
      <strong class="mr-auto" id="toastTitle">Notification</strong>
      <button type="button" class="ml-2 mb-1 close text-white" data-dismiss="toast">&times;</button>
    </div>
    <div class="toast-body hackerFont" id="toastBody">Message goes here.</div>
  </div>
</div>

<!-- JS -->
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<script>
  // üîπ Toast Function
  function showToast(type, message) {
    const toastTitle = $("#toastTitle");
    const toastBody = $("#toastBody");
    const toast = $("#toastMsg");

    // Reset
    toast.removeClass("border-danger border-success border-warning");
    $(".toast-header").removeClass("bg-danger bg-success bg-warning");

    // Style by type
    if (type === "success") {
      $(".toast-header").addClass("bg-success");
      toast.addClass("border-success");
      toastTitle.text("‚úÖ Success");
    } else if (type === "error") {
      $(".toast-header").addClass("bg-danger");
      toast.addClass("border-danger");
      toastTitle.text("‚ùå Error");
    } else {
      $(".toast-header").addClass("bg-warning text-dark");
      toast.addClass("border-warning");
      toastTitle.text("‚ö†Ô∏è Notice");
    }

    toastBody.text(message);
    toast.toast("show");
  }

  // üîπ Filter Buttons
  $(".filter-btn").on("click", function () {
    $(".filter-btn").removeClass("active");
    $(this).addClass("active");
    filterChallenges();
  });

  $("#searchInput").on("input", filterChallenges);

  function filterChallenges() {
    const cat = $(".filter-btn.active").data("cat");
    const q = ($("#searchInput").val() || "").toLowerCase();

    $("#challengeGrid .challenge-card").each(function () {
      const name = ($(this).data("name") + "").toLowerCase();
      const c = $(this).data("cat");
      const matchCat = cat === "all" || c === cat;
      const matchText = !q || name.includes(q);
      $(this).toggle(matchCat && matchText);
    });
  }

  // üîπ Open Modal
  $(".openChallenge").on("click", function () {
    const $card = $(this).closest(".challenge-card");
    $("#modalTitle").text($card.data("name"));
    $("#modalCategory").text($card.data("cat"));
    $("#modalPoints").text($card.data("points") + " pts");
    $("#modalDiff").text($card.data("diff"));
    $("#modalDesc").text($card.data("desc"));
    $("#expectedFlag").val($card.data("flag"));

    const solved = $card.data("solved") === true || $card.data("solved") === "true";
    $("#modalStatus")
      .text(solved ? "Solved" : "Unsolved")
      .removeClass("badge-dark badge-success")
      .addClass(solved ? "badge-success" : "badge-dark");

    $("#challengeModal").modal("show");
  });

  // üîπ Submit Flag (Client demo)
  $("#submitFlag").on("click", function () {
    const userFlag = ($("#flagInput").val() || "").trim();
    const expected = $("#expectedFlag").val();

    if (!userFlag) {
      showToast("warning", "‚ö†Ô∏è Vui l√≤ng nh·∫≠p flag!");
      return;
    }

    if (userFlag === expected) {
      const title = $("#modalTitle").text();
      const $card = $("#challengeGrid .challenge-card").filter(
        (_, el) => $(el).data("name") === title
      );
      $card.data("solved", "true");
      $card.find(".status-badge")
        .removeClass("badge-dark")
        .addClass("badge-success")
        .text("Solved");

      showToast("success", "üéâ Ch√≠nh x√°c! Flag h·ª£p l·ªá.");
      $("#challengeModal").modal("hide");
    } else {
      showToast("error", "‚ùå Sai flag r·ªìi! Th·ª≠ l·∫°i nh√©.");
    }
  });
</script>
